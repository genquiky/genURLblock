name: Extract URLs

on:
  push:
    branches:
      - main

jobs:
  extract-urls:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Fetch JSON from URL and extract URLs
      run: |
        python - <<EOF
        import requests
        import json

        # URL of the JSON data
        url = 'https://urlhaus.abuse.ch/downloads/json_recent/'  # Replace with the actual URL

        try:
            # Fetch the JSON data from the URL
            response = requests.get(url)
            response.raise_for_status()  # Raise an exception for HTTP errors
            data = response.json()

            # Initialize a list to hold the extracted URLs
            extracted_urls = []

            # Iterate over all entries in the JSON data
            for key, entries in data.items():
                for entry in entries:
                    # Extract the "url" field and remove the "http://" part
                    extracted_url = entry["url"].replace("http://", "")
                    extracted_urls.append(f'"{extracted_url}"')

            # Create the new format with header
            new_format = {
                "name": "Fabston's Malicious Blocklist",
                "description": "==================================\n                  Malicious URL Blocklist\n---------------------------------------------\nEntries:         151,358\nUpdated:      Nov 20, 2024, 03:00 PM (UTC)\nSize:             4.5M\nMaintainer:   fabston\nExpires:        1 day (update frequency)\nLicense:       GPL-3.0\n==================================",
                "denied-remote-domains": extracted_urls
            }

            # Save the new format to a .json file
            with open('new_format.json', 'w') as file:
                json.dump(new_format, file, indent=4)

            # Print the new format
            print(json.dumps(new_format, indent=4))

        except requests.exceptions.RequestException as e:
            print(f"Error fetching JSON data: {e}")
        except json.JSONDecodeError as e:
            print(f"Error decoding JSON data: {e}")
        except KeyError as e:
            print(f"Error accessing JSON data: {e}")
        except Exception as e:
            print(f"An unexpected error occurred: {e}")
        EOF

    - name: Commit and push the new format file
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add new_format.json
        git commit -m "Add new_format.json with extracted URLs"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.URL_BLOCKLIST2_TOKEN }}
