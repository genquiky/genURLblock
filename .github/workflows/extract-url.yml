name: Extract URLs

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main

jobs:
  extract-urls:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Fetch JSON from URL and extract URLs
      run: |
        python - <<EOF
        import requests

        # URL of the JSON data
        url = 'https://urlhaus.abuse.ch/downloads/json_recent/'  # Replace with the actual URL

        try:
            # Fetch the JSON data from the URL
            response = requests.get(url)
            response.raise_for_status()  # Raise an exception for HTTP errors
            data = response.json()

            # Initialize a list to hold the extracted URLs
            extracted_urls = []

            # Iterate over all entries in the JSON data
            for key, entries in data.items():
                for entry in entries:
                    # Extract the "url" field and remove the "http://" part
                    extracted_url = entry["url"].replace("http://", "")
                    extracted_urls.append(extracted_url)

            # Save the extracted URLs to a .txt file
            with open('urls_blocklist.txt', 'w') as file:
                for url in extracted_urls:
                    file.write(f"{url}\n")

            # Print the extracted URLs
            for url in extracted_urls:
                print(url)

        except requests.exceptions.RequestException as e:
            print(f"Error fetching JSON data: {e}")
        except json.JSONDecodeError as e:
            print(f"Error decoding JSON data: {e}")
        except KeyError as e:
            print(f"Error accessing JSON data: {e}")
        except Exception as e:
            print(f"An unexpected error occurred: {e}")
        EOF

    - name: Commit and push the new format file
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add urls_blocklist.txt
        git commit -m "Add urls_blocklist.txt with extracted URLs"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.URL_BLOCKLIST2_TOKEN }}
